{"pageProps":{"postData":{"id":"next-github-pages","contentHtml":"<p>Before proceeding let's make a few things clear about <strong>Github Pages</strong></p>\n<ul>\n<li>Github Pages is meant for hosting static websites, that is hosting plain old websites comprised of html, css and javascript.</li>\n<li>Github processes your static website using Jekyll before hosting. This can easily be disabled by adding a <strong>.nojekyll</strong> file to the root directory of your website. This is required for two reasons\n<ul>\n<li>Jekyll can bring in unwanted changes or behaviors to a website that has already been created using NextJs</li>\n<li>Jekyll ignores directories starting with an underscore while NextJs creates an _next directory after exporting a static website</li>\n</ul>\n</li>\n</ul>\n<p>I'm assuming that you have a static website ready waiting to be deployed but if not and you're new to NextJs then you can follow this simple yet awesome tutorial provided in the NextJs website <a href=\"https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&#x26;utm_medium=homepage-cta&#x26;utm_campaign=next-website\">here</a></p>\n<h3>Steps to deploy on Github Pages:</h3>\n<ul>\n<li>Open your project's Github page and click <strong>Actions</strong></li>\n<li>Click on <strong>set up a workflow yourself</strong></li>\n<li>Paste the following</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># This is a basic workflow to help you get started with Actions</span>\n\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CI\n\n<span class=\"token comment\"># Controls when the workflow will run</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Triggers the workflow on push request events but only for the main branch</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> main <span class=\"token punctuation\">]</span>\n\n  <span class=\"token comment\"># Allows you to run this workflow manually from the Actions tab</span>\n  <span class=\"token key atrule\">workflow_dispatch</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token comment\"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># This workflow contains a single job called \"build\"</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># The type of runner that the job will run on</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token comment\"># Steps represent a sequence of tasks that will be executed as part of the job</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n      <span class=\"token comment\">#Uses node 16</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'16'</span>\n          \n      <span class=\"token comment\"># npm ci is a faster way to install modules on automated environments</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> install modules\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      \n      <span class=\"token comment\"># Build and export static</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and export a static site\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build <span class=\"token important\">&#x26;&#x26;</span> npm run export\n\n      <span class=\"token comment\"># Deploy the build folder to gh-pages</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy build to gh<span class=\"token punctuation\">-</span>pages\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">publish_dir</span><span class=\"token punctuation\">:</span> ./out\n          <span class=\"token key atrule\">enable_jekyll</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n\n</code></pre></div>\n<ul>\n<li>Click <strong>Start Commit</strong> and after writing a commit message click <strong>Commit new file</strong></li>\n<li>The above action should be enough to deploy your website. If your website isn't being hosted from your root url (example: xyz.github.io) but instead is being hosted on a branch url (example: xyz.github.io/blog) then there would be errors while fetching static files. Also if you're using the <strong>next/image</strong> tag of NextJs then there will also be errors while exporting your project as the default image loader won't work.</li>\n<li>To fix these add a file named <strong>.env.production</strong> to the root directory of your NextJs project and paste something like the following</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">BASE_PATH=/nextjs-blog</code></pre></div>\n<p>This is an environment variable that is referencing a branch url where the website and its static files will exist. NextJs will read this while building the project.</p>\n<ul>\n<li>Now add a file named <strong>next.config.js</strong> and paste the following</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">distDir</span><span class=\"token operator\">:</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">images</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'akamai'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BASE_PATH</span> <span class=\"token operator\">||</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">basePath</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BASE_PATH</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>The above file uses one of the possible image <a href=\"https://nextjs.org/docs/api-reference/next/image#built-in-loaders\">loaders</a> and makes use of the base path available from the environment file</li>\n<li>Once done, commit and push the project. The Github action will take care of building and deploying your website.</li>\n</ul>\n<h3>Possible Issues that may occur</h3>\n<ul>\n<li><strong>favicon</strong> may not display properly\n<ul>\n<li>This generally occurs when you're hosting on a branch url instead of root</li>\n<li>One way to circumvent this is by using relative urls for favicon in each of your page. For example your index page might use a url <strong>\"./favicon.ico\"</strong> while sub-pages might use a url like <strong>\"../favicon.ico\"</strong> depending on the depth of the directory where your pages are present.</li>\n<li>Check out my project <a href=\"https://github.com/nilanshu96/nextjs-blog\">here</a> based on the nextjs-blog tutorial from the NextJs website. I've made slight changes to my project to circumvent this exact issue.</li>\n</ul>\n</li>\n</ul>","title":"Deploying a static Next Js website to Github Pages","date":"2022-02-15"}},"__N_SSG":true}